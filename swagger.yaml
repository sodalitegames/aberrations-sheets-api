# TODO: CREATE REUSABLE GROUPS OF PARAMS FOR THIS FILE
openapi: '3.0.0'
info:
  title: Aberrations Sheets API
  description: API for Aberrations Sheets application.
host: api.sheets.aberrations-rpg.com
basePath: /v1
paths:
  /players/:sheetType:
    get:
      summary: List all of a players character or campaign sheets (unaggregated).
      tags:
        - Players
        - Character Sheets
        - Campaign Sheets
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
    post:
      summary: Create a character or campaign sheet for a player.
      tags:
        - Players
        - Character Sheets
        - Campaign Sheets
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: body
          name: sheet
          description: The character or campaign sheet to create.
          schema:
            oneOf:
              - $ref: '#/components/schemas/CharSheet'
              - $ref: '#/components/schemas/CampSheet'
  /players/:sheetType/:sheetId:
    get:
      summary: Fetch a single character or campaign sheet of a player (unaggregated).
      tags:
        - Players
        - Character Sheets
        - Campaign Sheets
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which character or campaign sheet to get.
  /:sheetType/:sheetId:
    get:
      summary: Fetch a single character or campaign sheet (aggregated).
      tags:
        - Character Sheets
        - Campaign Sheets
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which character or campaign sheet to get.
    patch:
      summary: Update a character or campaign sheet.
      tags:
        - Character Sheets
        - Campaign Sheets
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which character or campaign sheet to update.
        - in: body
          name: properties
          description: The properties of the character or campaign sheet to update.
          schema:
            oneOf:
              - $ref: '#/components/schemas/CharSheet'
              - $ref: '#/components/schemas/CampSheet'
    delete:
      summary: Delete a character or campaign sheet.
      tags:
        - Character Sheets
        - Campaign Sheets
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which character or campaign sheet to delete.

  /:sheetType/:sheetId/logs:
    get:
      summary: List all logs of a character or campaign sheet.
      tags:
        - Logs
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to get the logs of.
    post:
      summary: Create a log for a character or campaign sheet.
      tags:
        - Logs
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to create the log for.
        - in: body
          name: log
          description: The log to create.
          schema:
            $ref: '#/components/schemas/Log'
  /:sheetType/:sheetId/logs/:logId:
    get:
      summary: Get a log.
      tags:
        - Logs
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to get the log for.
        - in: path
          name: logId
          required: true
          type: string
          description: Which log to get.
    patch:
      summary: Update a log.
      tags:
        - Logs
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to create the log for.
        - in: path
          name: logId
          required: true
          type: string
          description: Which log to update.
        - in: body
          name: properties
          description: The properties of the log to update.
          schema:
            $ref: '#/components/schemas/Log'
    delete:
      summary: Delete a log.
      tags:
        - Logs
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to delete the log for.
        - in: path
          name: logId
          required: true
          type: string
          description: Which log to delete.

  /:sheetType/:sheetId/notes:
    get:
      summary: List all notes of a character or campaign sheet.
      tags:
        - Notes
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to get the notes of.
    post:
      summary: Create a note for a character or campaign sheet.
      tags:
        - Notes
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to create the note for.
        - in: body
          name: log
          description: The note to create.
          schema:
            $ref: '#/components/schemas/Note'
  /:sheetType/:sheetId/notes/:logId:
    get:
      summary: Get a note.
      tags:
        - Notes
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to get the note for.
        - in: path
          name: noteId
          required: true
          type: string
          description: Which note to get.
    patch:
      summary: Update a note.
      tags:
        - Notes
      consumes: application/json
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to create the note for.
        - in: path
          name: noteId
          required: true
          type: string
          description: Which note to update.
        - in: body
          name: properties
          description: The properties of the note to update.
          schema:
            $ref: '#/components/schemas/Note'
    delete:
      summary: Delete a note.
      tags:
        - Notes
      parameters:
        - in: path
          name: sheetType
          required: true
          schema:
            $ref: '#/components/schemas/sheetType'
        - in: path
          name: sheetId
          required: true
          type: string
          description: Which sheet to delete the note for.
        - in: path
          name: noteId
          required: true
          type: string
          description: Which note to delete.

components:
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
  schemas:
    CharSheet:
      type: object
      required:
        - playerName
        - characterName
        - charBackground
        - charDescription
      properties:
        playerName:
          type: string
        characterName:
          type: string
        charBackground:
          type: string
        charDescription:
          type: string
        lifeKredits:
          type: number
    CampSheet:
      type: object
      required:
        - name
        - overview
        - details
      properties:
        name:
          type: string
        overview:
          type: string
        details:
          type: string

    Log:
      type: object
      required:
        - date
        - content
      properties:
        date:
          type: string
          format: date
        content:
          type: string
    Note:
      type: object
      required:
        - content
      properties:
        content:
          type: string

    # Enums
    sheetType:
      type: string
      enum:
        - characters
        - campaigns

# Apply the security globally to all operations
security:
  - bearerToken: []
